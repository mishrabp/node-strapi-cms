apiVersion: v1
kind: ConfigMap
metadata:
  name: strapi-api-configmap
  namespace: apps
data:
  DATABASE_SRV: "false" 
  DATABASE_PORT: "30017"
  DATABASE_HOST: devopsk8masterlinuxvm.centralus.cloudapp.azure.com
#  DATABASE_PORT: "27017" 
#  DATABASE_HOST: mongodb-0.mongodb-headless-svc.apps.svc.cluster.local
  AUTHENTICATION_DATABASE: "strapicms" 
  DATABASE_SSL: "false"

---
apiVersion: v1
kind: Secret
metadata:
  name: strapi-api-secret
  namespace: apps
type: Opaque
data:
#  DATABASE_HOST: ZGV2b3BzbWFzdGVybGludXh2bS5jZW50cmFsdXMuY2xvdWRhcHAuYXp1cmUuY29t #devopsmasterlinuxvm.centralus.cloudapp.azure.com
  DATABASE_NAME: c3RyYXBpY21z #strapicms 
  DATABASE_USERNAME: c3RyYXBpdXNlcg== #strapiuser 
  DATABASE_PASSWORD: cGFzc3cwcmQh #passw0rd!

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: strapi-api
  namespace: apps
  labels:
    app: strapi-api
  annotations:
    description: "It's a MVC demo built on NodeJs"
    developer: "Bibhu Prasad Mishra"  
    email: "bibhup_mishra@yahoo.com"  
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: strapi-api-pod
      type: front-end
  template:
    metadata:
      labels:
        app: strapi-api-pod
        type: front-end
    spec:
      containers:
      - name: strapi-api-pod
        image: "{{ .Values.image.repository }}/{{ .Values.application.name }}:{{.Values.image.tag |  default .Chart.AppVersion}}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
        - configMapRef:
            name: strapi-api-configmap
        - secretRef:
            name: strapi-api-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "500m"
          limits:
            memory: "512Mi"
            cpu: "1000m"
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /admin
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /admin
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 5
#      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions: 
#              - key: "nodejs"
#                operator: "In"
#                values: 
#                - "yes"
#              - key: "dotnetcore"
#                operator: "In"
#                values: 
#                - "yes"
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "blue"
        effect: "NoExecute"
---
apiVersion: v1
kind: Service
metadata:
  name: strapi-api-svc
  namespace: apps
  labels:
    svc: strapi-api-svc
spec:
  #type: NodePort
  selector:
    app: strapi-api-pod
  ports:
  - port: 8080
    targetPort: 8080
    #nodePort: 30090

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: strapi-api-ingress
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  namespace: apps
spec:
  rules:
  - host: "strapi.kube9t.com"
    http:
      paths:
      - path: /(.*)
        pathType: Prefix
        backend:
          service:
            name: strapi-api-svc
            port:
              number: 8080


